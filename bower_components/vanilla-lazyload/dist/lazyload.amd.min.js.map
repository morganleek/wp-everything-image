{"version":3,"sources":["lazyload.js"],"names":["define","runningOnBrowser","window","isBot","navigator","test","userAgent","supportsIntersectionObserver","supportsClassList","document","createElement","defaultSettings","elements_selector","container","threshold","thresholds","data_src","data_srcset","data_sizes","data_bg","class_loading","class_loaded","class_error","load_delay","auto_unobserve","callback_enter","callback_exit","callback_reveal","callback_loaded","callback_error","callback_finish","getData","element","attribute","getAttribute","setData","value","attrName","setAttribute","removeAttribute","getWasProcessedData","setTimeoutData","getTimeoutData","createInstance","classObj","options","event","instance","CustomEvent","detail","err","createEvent","initCustomEvent","dispatchEvent","callbackIfSet","callback","argument","updateLoadingCount","plusMinus","_loadingCount","_elements","length","_settings","getSourceTags","parentTag","childTag","sourceTags","i","children","tagName","push","setAttributeIfValue","setImageAttributes","settings","setSourcesFunctions","IMG","parent","parentNode","forEach","sourceTag","IFRAME","VIDEO","load","setSources","elements","elementToPurge","setSourcesFunction","filter","srcDataValue","bgDataValue","style","backgroundImage","concat","setSourcesBgImage","addClass","className","classList","add","addEventListener","eventName","handler","removeEventListener","removeEventListeners","loadHandler","errorHandler","eventHandler","success","target","remove","replace","RegExp","removeClass","addOneShotEventListeners","addEventListeners","managedTags","revealAndUnobserve","observer","_observer","revealElement","unobserve","cancelDelayLoad","timeoutId","clearTimeout","delayLoad","loadDelay","setTimeout","force","indexOf","setWasProcessedData","setObserver","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","onEnter","onExit","root","rootMargin","LazyLoad","customSettings","this","_extends","getInstanceSettings","update","prototype","_this","nodeSet","querySelectorAll","purgeProcessedElements","Array","slice","call","observe","loadAll","destroy","_this2","_this3","optionsItem","autoInitialize","lazyLoadOptions"],"mappings":"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","file":"lazyload.amd.min.js","sourcesContent":["define(function () { 'use strict';\n\nconst runningOnBrowser = typeof window !== \"undefined\";\n\nconst isBot =\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\n\t(typeof navigator !== \"undefined\" &&\n\t\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent));\n\nconst supportsIntersectionObserver =\n\trunningOnBrowser && \"IntersectionObserver\" in window;\n\nconst supportsClassList =\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst defaultSettings = {\n\telements_selector: \"img\",\n\tcontainer: isBot || runningOnBrowser ? document : null,\n\tthreshold: 300,\n\tthresholds: null,\n\tdata_src: \"src\",\n\tdata_srcset: \"srcset\",\n\tdata_sizes: \"sizes\",\n\tdata_bg: \"bg\",\n\tclass_loading: \"loading\",\n\tclass_loaded: \"loaded\",\n\tclass_error: \"error\",\n\tload_delay: 0,\n\tauto_unobserve: true,\n\tcallback_enter: null,\n\tcallback_exit: null,\n\tcallback_reveal: null,\n\tcallback_loaded: null,\n\tcallback_error: null,\n\tcallback_finish: null\n};\n\nvar getInstanceSettings = customSettings => {\n\treturn Object.assign({}, defaultSettings, customSettings);\n};\n\nconst dataPrefix = \"data-\";\nconst processedDataName = \"was-processed\";\nconst timeoutDataName = \"ll-timeout\";\nconst trueString = \"true\";\n\nconst getData = (element, attribute) => {\n\treturn element.getAttribute(dataPrefix + attribute);\n};\n\nconst setData = (element, attribute, value) => {\n\tvar attrName = dataPrefix + attribute;\n\tif (value === null) {\n\t\telement.removeAttribute(attrName);\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, value);\n};\n\nconst setWasProcessedData = element =>\n\tsetData(element, processedDataName, trueString);\n\nconst getWasProcessedData = element =>\n\tgetData(element, processedDataName) === trueString;\n\nconst setTimeoutData = (element, value) =>\n\tsetData(element, timeoutDataName, value);\n\nconst getTimeoutData = element => getData(element, timeoutDataName);\n\nconst purgeProcessedElements = elements => {\n\treturn elements.filter(element => !getWasProcessedData(element));\n};\n\nconst purgeOneElement = (elements, elementToPurge) => {\n\treturn elements.filter(element => element !== elementToPurge);\n};\n\n/* Creates instance and notifies it through the window element */\nconst createInstance = function(classObj, options) {\n\tvar event;\n\tlet eventString = \"LazyLoad::Initialized\";\n\tlet instance = new classObj(options);\n\ttry {\n\t\t// Works in modern browsers\n\t\tevent = new CustomEvent(eventString, { detail: { instance } });\n\t} catch (err) {\n\t\t// Works in Internet Explorer (all versions)\n\t\tevent = document.createEvent(\"CustomEvent\");\n\t\tevent.initCustomEvent(eventString, false, false, { instance });\n\t}\n\twindow.dispatchEvent(event);\n};\n\n/* Auto initialization of one or more instances of lazyload, depending on the \n    options passed in (plain object or an array) */\nfunction autoInitialize(classObj, options) {\n\tif (!options) {\n\t\treturn;\n\t}\n\tif (!options.length) {\n\t\t// Plain object\n\t\tcreateInstance(classObj, options);\n\t} else {\n\t\t// Array of objects\n\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\n\t\t\tcreateInstance(classObj, optionsItem);\n\t\t}\n\t}\n}\n\nconst callbackIfSet = (callback, argument) => {\n\tif (callback) {\n\t\tcallback(argument);\n\t}\n};\n\nconst updateLoadingCount = (instance, plusMinus) => {\n\tinstance._loadingCount += plusMinus;\n\tif (instance._elements.length === 0 && instance._loadingCount === 0) {\n\t\tcallbackIfSet(instance._settings.callback_finish);\n\t}\n};\n\nconst getSourceTags = parentTag => {\n\tlet sourceTags = [];\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\n\t\tif (childTag.tagName === \"SOURCE\") {\n\t\t\tsourceTags.push(childTag);\n\t\t}\n\t}\n\treturn sourceTags;\n};\n\nconst setAttributeIfValue = (element, attrName, value) => {\n\tif (!value) {\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, value);\n};\n\nconst setImageAttributes = (element, settings) => {\n\tsetAttributeIfValue(\n\t\telement,\n\t\t\"sizes\",\n\t\tgetData(element, settings.data_sizes)\n\t);\n\tsetAttributeIfValue(\n\t\telement,\n\t\t\"srcset\",\n\t\tgetData(element, settings.data_srcset)\n\t);\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n};\n\nconst setSourcesImg = (element, settings) => {\n\tconst parent = element.parentNode;\n\n\tif (parent && parent.tagName === \"PICTURE\") {\n\t\tlet sourceTags = getSourceTags(parent);\n\t\tsourceTags.forEach(sourceTag => {\n\t\t\tsetImageAttributes(sourceTag, settings);\n\t\t});\n\t}\n\n\tsetImageAttributes(element, settings);\n};\n\nconst setSourcesIframe = (element, settings) => {\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n};\n\nconst setSourcesVideo = (element, settings) => {\n\tlet sourceTags = getSourceTags(element);\n\tsourceTags.forEach(sourceTag => {\n\t\tsetAttributeIfValue(\n\t\t\tsourceTag,\n\t\t\t\"src\",\n\t\t\tgetData(sourceTag, settings.data_src)\n\t\t);\n\t});\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\n\telement.load();\n};\n\nconst setSourcesBgImage = (element, settings) => {\n\tconst srcDataValue = getData(element, settings.data_src);\n\tconst bgDataValue = getData(element, settings.data_bg);\n\n\tif (srcDataValue) {\n\t\telement.style.backgroundImage = `url(\"${srcDataValue}\")`;\n\t}\n\n\tif (bgDataValue) {\n\t\telement.style.backgroundImage = bgDataValue;\n\t}\n};\n\nconst setSourcesFunctions = {\n\tIMG: setSourcesImg,\n\tIFRAME: setSourcesIframe,\n\tVIDEO: setSourcesVideo\n};\n\nconst setSources = (element, instance) => {\n\tconst settings = instance._settings;\n\tconst tagName = element.tagName;\n\tconst setSourcesFunction = setSourcesFunctions[tagName];\n\tif (setSourcesFunction) {\n\t\tsetSourcesFunction(element, settings);\n\t\tupdateLoadingCount(instance, 1);\n\t\tinstance._elements = purgeOneElement(instance._elements, element);\n\t\treturn;\n\t}\n\tsetSourcesBgImage(element, settings);\n};\n\nconst addClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.add(className);\n\t\treturn;\n\t}\n\telement.className += (element.className ? \" \" : \"\") + className;\n};\n\nconst removeClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.remove(className);\n\t\treturn;\n\t}\n\telement.className = element.className.\n\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\n\t\treplace(/^\\s+/, \"\").\n\t\treplace(/\\s+$/, \"\");\n};\n\nconst genericLoadEventName = \"load\";\nconst mediaLoadEventName = \"loadeddata\";\nconst errorEventName = \"error\";\n\nconst addEventListener = (element, eventName, handler) => {\n\telement.addEventListener(eventName, handler);\n};\n\nconst removeEventListener = (element, eventName, handler) => {\n\telement.removeEventListener(eventName, handler);\n};\n\nconst addEventListeners = (element, loadHandler, errorHandler) => {\n\taddEventListener(element, genericLoadEventName, loadHandler);\n\taddEventListener(element, mediaLoadEventName, loadHandler);\n\taddEventListener(element, errorEventName, errorHandler);\n};\n\nconst removeEventListeners = (element, loadHandler, errorHandler) => {\n\tremoveEventListener(element, genericLoadEventName, loadHandler);\n\tremoveEventListener(element, mediaLoadEventName, loadHandler);\n\tremoveEventListener(element, errorEventName, errorHandler);\n};\n\nconst eventHandler = function(event, success, instance) {\n\tvar settings = instance._settings;\n\tconst className = success ? settings.class_loaded : settings.class_error;\n\tconst callback = success\n\t\t? settings.callback_loaded\n\t\t: settings.callback_error;\n\tconst element = event.target;\n\n\tremoveClass(element, settings.class_loading);\n\taddClass(element, className);\n\tcallbackIfSet(callback, element);\n\n\tupdateLoadingCount(instance, -1);\n};\n\nconst addOneShotEventListeners = (element, instance) => {\n\tconst loadHandler = event => {\n\t\teventHandler(event, true, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\tconst errorHandler = event => {\n\t\teventHandler(event, false, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\taddEventListeners(element, loadHandler, errorHandler);\n};\n\nconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\n\nconst onEnter = (element, instance) => {\n\tconst settings = instance._settings;\n\tcallbackIfSet(settings.callback_enter, element);\n\tif (!settings.load_delay) {\n\t\trevealAndUnobserve(element, instance);\n\t\treturn;\n\t}\n\tdelayLoad(element, instance);\n};\n\nconst revealAndUnobserve = (element, instance) => {\n\tvar observer = instance._observer;\n\trevealElement(element, instance);\n\tif (observer && instance._settings.auto_unobserve) {\n\t\tobserver.unobserve(element);\n\t}\n};\n\nconst onExit = (element, instance) => {\n\tconst settings = instance._settings;\n\tcallbackIfSet(settings.callback_exit, element);\n\tif (!settings.load_delay) {\n\t\treturn;\n\t}\n\tcancelDelayLoad(element);\n};\n\nconst cancelDelayLoad = element => {\n\tvar timeoutId = getTimeoutData(element);\n\tif (!timeoutId) {\n\t\treturn; // do nothing if timeout doesn't exist\n\t}\n\tclearTimeout(timeoutId);\n\tsetTimeoutData(element, null);\n};\n\nconst delayLoad = (element, instance) => {\n\tvar loadDelay = instance._settings.load_delay;\n\tvar timeoutId = getTimeoutData(element);\n\tif (timeoutId) {\n\t\treturn; // do nothing if timeout already set\n\t}\n\ttimeoutId = setTimeout(function() {\n\t\trevealAndUnobserve(element, instance);\n\t\tcancelDelayLoad(element);\n\t}, loadDelay);\n\tsetTimeoutData(element, timeoutId);\n};\n\nconst revealElement = (element, instance, force) => {\n\tvar settings = instance._settings;\n\tif (!force && getWasProcessedData(element)) {\n\t\treturn; // element has already been processed and force wasn't true\n\t}\n\tif (managedTags.indexOf(element.tagName) > -1) {\n\t\taddOneShotEventListeners(element, instance);\n\t\taddClass(element, settings.class_loading);\n\t}\n\tsetSources(element, instance);\n\tsetWasProcessedData(element);\n\tcallbackIfSet(settings.callback_reveal, element);\n};\n\nconst isIntersecting = entry =>\n\tentry.isIntersecting || entry.intersectionRatio > 0;\n\nconst getObserverSettings = settings => ({\n\troot: settings.container === document ? null : settings.container,\n\trootMargin: settings.thresholds || settings.threshold + \"px\"\n});\n\nconst setObserver = instance => {\n\tif (!supportsIntersectionObserver) {\n\t\treturn false;\n\t}\n\tinstance._observer = new IntersectionObserver(entries => {\n\t\tentries.forEach(entry =>\n\t\t\tisIntersecting(entry)\n\t\t\t\t? onEnter(entry.target, instance)\n\t\t\t\t: onExit(entry.target, instance)\n\t\t);\n\t}, getObserverSettings(instance._settings));\n\treturn true;\n};\n\nconst LazyLoad = function(customSettings, elements) {\n\tthis._settings = getInstanceSettings(customSettings);\n\tthis._loadingCount = 0;\n\tsetObserver(this);\n\tthis.update(elements);\n};\n\nLazyLoad.prototype = {\n\tupdate: function(elements) {\n\t\tconst settings = this._settings;\n\t\tconst nodeSet =\n\t\t\telements ||\n\t\t\tsettings.container.querySelectorAll(settings.elements_selector);\n\n\t\tthis._elements = purgeProcessedElements(\n\t\t\tArray.prototype.slice.call(nodeSet) // NOTE: nodeset to array for IE compatibility\n\t\t);\n\n\t\tif (isBot || !this._observer) {\n\t\t\tthis.loadAll();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._elements.forEach(element => {\n\t\t\tthis._observer.observe(element);\n\t\t});\n\t},\n\n\tdestroy: function() {\n\t\tif (this._observer) {\n\t\t\tthis._elements.forEach(element => {\n\t\t\t\tthis._observer.unobserve(element);\n\t\t\t});\n\t\t\tthis._observer = null;\n\t\t}\n\t\tthis._elements = null;\n\t\tthis._settings = null;\n\t},\n\n\tload: function(element, force) {\n\t\trevealElement(element, this, force);\n\t},\n\n\tloadAll: function() {\n\t\tvar elements = this._elements;\n\t\telements.forEach(element => {\n\t\t\trevealAndUnobserve(element, this);\n\t\t});\n\t}\n};\n\n/* Automatic instances creation if required (useful for async script loading) */\nif (runningOnBrowser) {\n\tautoInitialize(LazyLoad, window.lazyLoadOptions);\n}\n\nreturn LazyLoad;\n\n});\n"]}